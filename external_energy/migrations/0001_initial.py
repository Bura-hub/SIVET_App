# Generated by Django 5.2.4 on 2025-08-26 06:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EnergyAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('price_spike', 'Pico de Precio'), ('high_demand', 'Alta Demanda'), ('low_generation', 'Baja Generación'), ('market_volatility', 'Volatilidad del Mercado'), ('weather_impact', 'Impacto del Clima')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('affected_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Alerta de Energía',
                'verbose_name_plural': 'Alertas de Energía',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnergyMarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('demand_mw', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('supply_mw', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('hydro_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('thermal_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('renewable_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('market_price_cop_mwh', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Dato del Mercado de Energía',
                'verbose_name_plural': 'Datos del Mercado de Energía',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EnergyPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('price_per_kwh', models.DecimalField(decimal_places=4, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('source', models.CharField(default='XM', max_length=100)),
                ('region', models.CharField(default='Colombia', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Precio de Energía',
                'verbose_name_plural': 'Precios de Energía',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EnergySavings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_consumed_kwh', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_generated_kwh', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_price_kwh', models.DecimalField(decimal_places=4, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_savings_cop', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('savings_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('self_consumption_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('excess_energy_kwh', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ahorro de Energía',
                'verbose_name_plural': 'Ahorros de Energía',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EnergyPriceForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('predicted_price_kwh', models.DecimalField(decimal_places=4, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('confidence_level', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('source', models.CharField(default='XM', max_length=100)),
                ('algorithm', models.CharField(default='ML_Model', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Pronóstico de Precio',
                'verbose_name_plural': 'Pronósticos de Precios',
                'ordering': ['date'],
                'unique_together': {('date', 'source')},
            },
        ),
    ]
