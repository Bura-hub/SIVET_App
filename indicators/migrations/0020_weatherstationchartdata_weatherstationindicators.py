# Generated by Django 5.2.4 on 2025-08-12 14:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('indicators', '0019_inverterchartdata_inverterindicators'),
        ('scada_proxy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WeatherStationChartData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Fecha del registro.')),
                ('hourly_irradiance', models.JSONField(default=list, help_text='Irradiancia por hora del día en W/m².')),
                ('daily_irradiance_kwh_m2', models.FloatField(default=0.0, help_text='Irradiancia acumulada diaria en kWh/m².')),
                ('hourly_temperature', models.JSONField(default=list, help_text='Temperatura por hora del día en °C.')),
                ('avg_daily_temperature_c', models.FloatField(default=0.0, help_text='Temperatura promedio diaria en °C.')),
                ('hourly_humidity', models.JSONField(default=list, help_text='Humedad por hora del día en %.')),
                ('avg_daily_humidity_pct', models.FloatField(default=0.0, help_text='Humedad promedio diaria en %.')),
                ('hourly_wind_speed', models.JSONField(default=list, help_text='Velocidad del viento por hora del día en km/h.')),
                ('hourly_wind_direction', models.JSONField(default=list, help_text='Dirección del viento por hora del día en grados.')),
                ('avg_daily_wind_speed_kmh', models.FloatField(default=0.0, help_text='Velocidad promedio del viento diaria en km/h.')),
                ('hourly_precipitation', models.JSONField(default=list, help_text='Precipitación por hora del día en cm.')),
                ('daily_precipitation_cm', models.FloatField(default=0.0, help_text='Precipitación acumulada diaria en cm.')),
                ('calculated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora del cálculo.')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_chart_data', to='scada_proxy.device')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_chart_data', to='scada_proxy.institution')),
            ],
            options={
                'verbose_name': 'Datos de Gráfico de Estación Meteorológica',
                'verbose_name_plural': 'Datos de Gráficos de Estaciones Meteorológicas',
                'indexes': [models.Index(fields=['device', 'date'], name='indicators__device__e54e97_idx'), models.Index(fields=['institution', 'date'], name='indicators__institu_08788d_idx'), models.Index(fields=['date'], name='indicators__date_56685a_idx')],
                'unique_together': {('device', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WeatherStationIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Fecha del registro (para datos diarios) o primer día del mes (para datos mensuales).')),
                ('time_range', models.CharField(choices=[('daily', 'Diario'), ('monthly', 'Mensual')], help_text='Tipo de rango de tiempo del registro.', max_length=20)),
                ('daily_irradiance_kwh_m2', models.FloatField(default=0.0, help_text='Irradiancia acumulada diaria en kWh/m².')),
                ('daily_hsp_hours', models.FloatField(default=0.0, help_text='Horas solares pico diarias.')),
                ('avg_wind_speed_kmh', models.FloatField(default=0.0, help_text='Velocidad media del viento en km/h.')),
                ('wind_direction_distribution', models.JSONField(default=dict, help_text='Distribución de direcciones del viento (rosa de los vientos).')),
                ('wind_speed_distribution', models.JSONField(default=dict, help_text='Distribución de velocidades del viento.')),
                ('daily_precipitation_cm', models.FloatField(default=0.0, help_text='Precipitación acumulada diaria en cm.')),
                ('theoretical_pv_power_w', models.FloatField(default=0.0, help_text='Potencia fotovoltaica teórica basada en irradiancia en W.')),
                ('avg_temperature_c', models.FloatField(default=0.0, help_text='Temperatura promedio en °C.')),
                ('avg_humidity_pct', models.FloatField(default=0.0, help_text='Humedad relativa promedio en %.')),
                ('max_temperature_c', models.FloatField(default=0.0, help_text='Temperatura máxima en °C.')),
                ('min_temperature_c', models.FloatField(default=0.0, help_text='Temperatura mínima en °C.')),
                ('measurement_count', models.IntegerField(default=0, help_text='Número de mediciones procesadas.')),
                ('last_measurement_date', models.DateTimeField(blank=True, help_text='Fecha de la última medición procesada.', null=True)),
                ('calculated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora del cálculo.')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_indicators', to='scada_proxy.device')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_indicators', to='scada_proxy.institution')),
            ],
            options={
                'verbose_name': 'Indicadores de Estación Meteorológica',
                'verbose_name_plural': 'Indicadores de Estaciones Meteorológicas',
                'indexes': [models.Index(fields=['device', 'date', 'time_range'], name='indicators__device__acd3a7_idx'), models.Index(fields=['institution', 'date', 'time_range'], name='indicators__institu_696c21_idx'), models.Index(fields=['date', 'time_range'], name='indicators__date_a7681b_idx')],
                'unique_together': {('device', 'date', 'time_range')},
            },
        ),
    ]
