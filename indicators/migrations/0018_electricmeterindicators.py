# Generated by Django 5.2.4 on 2025-08-10 19:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('indicators', '0017_electricmeterenergyconsumption'),
        ('scada_proxy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricMeterIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Fecha del registro (para datos diarios) o primer día del mes (para datos mensuales).')),
                ('time_range', models.CharField(choices=[('daily', 'Diario'), ('monthly', 'Mensual')], help_text='Tipo de rango de tiempo del registro.', max_length=20)),
                ('imported_energy_kwh', models.FloatField(default=0.0, help_text='Energía importada total en kWh.')),
                ('exported_energy_kwh', models.FloatField(default=0.0, help_text='Energía exportada total en kWh.')),
                ('net_energy_consumption_kwh', models.FloatField(default=0.0, help_text='Energía neta consumida en kWh.')),
                ('peak_demand_kw', models.FloatField(default=0.0, help_text='Demanda pico en kW.')),
                ('avg_demand_kw', models.FloatField(default=0.0, help_text='Demanda promedio en kW.')),
                ('load_factor_pct', models.FloatField(default=0.0, help_text='Factor de carga en porcentaje.')),
                ('avg_power_factor', models.FloatField(default=0.0, help_text='Factor de potencia promedio.')),
                ('max_voltage_unbalance_pct', models.FloatField(default=0.0, help_text='Desbalance máximo de tensión en porcentaje.')),
                ('max_current_unbalance_pct', models.FloatField(default=0.0, help_text='Desbalance máximo de corriente en porcentaje.')),
                ('max_voltage_thd_pct', models.FloatField(default=0.0, help_text='THD máximo de tensión en porcentaje.')),
                ('max_current_thd_pct', models.FloatField(default=0.0, help_text='THD máximo de corriente en porcentaje.')),
                ('max_current_tdd_pct', models.FloatField(default=0.0, help_text='TDD máximo de corriente en porcentaje.')),
                ('measurement_count', models.IntegerField(default=0, help_text='Número de mediciones procesadas.')),
                ('last_measurement_date', models.DateTimeField(blank=True, help_text='Fecha de la última medición procesada.', null=True)),
                ('calculated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora del cálculo.')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electric_indicators', to='scada_proxy.device')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electric_indicators', to='scada_proxy.institution')),
            ],
            options={
                'verbose_name': 'Indicadores de Medidor Eléctrico',
                'verbose_name_plural': 'Indicadores de Medidores Eléctricos',
                'indexes': [models.Index(fields=['device', 'date', 'time_range'], name='indicators__device__b7a3f3_idx'), models.Index(fields=['institution', 'date', 'time_range'], name='indicators__institu_9e7c57_idx'), models.Index(fields=['date', 'time_range'], name='indicators__date_fa7955_idx')],
                'unique_together': {('device', 'date', 'time_range')},
            },
        ),
    ]
